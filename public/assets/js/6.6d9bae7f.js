(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{156:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h3",{attrs:{id:"net-files-meaning"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#net-files-meaning"}},[t._v("#")]),t._v(" .Net Files Meaning")]),n("div",{staticClass:"language-csharp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-csharp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. ProjectName.sln: a solution file which is file to run by IDEs")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. ProjectName.csproj: it contains")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reference to microsoft SDK")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reference of other project")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// target framework reference eg: netstandard2.0")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. Program.cs: it has Main() which is the root of your application, its like App.js in JavaScript")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4. appsettings.json: is a config file used to store config settings")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eg: db connection strings setup")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5. Startup.cs: this is where we add the application configuration")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eg: dependency injecition settings")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// services setup (eg: services.AddControllers())")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// authentication settings")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// middleware settings (eg: app.UseRouting(); //middleware)")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6. Properties/launchSettings.json: contains the environment settings")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// eg: localhost:5000 url settings")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 7. Controllers/ControllerName.cs: it contains")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [Route("api/[controller]")]: it defines the API attributes')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// In C#, [xxx] referes to attributes")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// [HttpGet("{id}")]: HttpGet refers to API request method, which is GET for this case')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ("{id}") means the parameter which is part of API call')]),t._v("\n")])])])])}],!1,null,null,null);e.default=a.exports}}]);