(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{167:function(s,t,a){"use strict";a.r(t);var e=a(0),r=Object(e.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"sql-general-recalls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-general-recalls"}},[s._v("#")]),s._v(" SQL General recalls")]),a("ol",{attrs:{start:"0"}},[a("li",[s._v("Common tips:")])]),a("ul",[a("li",[s._v("double hash "),a("code",[s._v("(--)")]),s._v(" means not run the code")]),a("li",[s._v("Usually in SQL, we use "),a("code",[s._v("single quote")])]),a("li",[a("code",[s._v("<>")]),s._v(" is same as "),a("code",[s._v("!=")]),s._v(", which means not equal to")])]),a("ol",[a("li",[a("p",[a("code",[s._v("SQL")]),s._v(": Structured Query Language")])]),a("li",[a("p",[s._v("Important Query Commands:")])])]),a("ul",[a("li",[a("code",[s._v("USE")]),s._v(": use database TEST")]),a("li",[a("code",[s._v("SELECT")]),s._v(": select database columns (eg: select *)")]),a("li",[a("code",[s._v("FROM")]),s._v(": from which database table")]),a("li",[a("code",[s._v("WHERE")]),s._v(": condition")]),a("li",[a("code",[s._v("ORDER BY")]),s._v(": default is ascending order")]),a("li",[a("code",[s._v("AS")]),s._v(": give a custom column name")]),a("li",[a("code",[s._v("AND")]),a("code",[s._v("OR")]),a("code",[s._v("NOT")]),s._v(": operators, ☞ venn diagram (eg: <>: means not equal)")]),a("li",[a("code",[s._v("IN")]),s._v(": contains which values, eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" state "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CO'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IL'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 'FL’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("LIKE")]),s._v(": find similar data eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%part_of_string%'")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("REGEX")]),s._v(": regular expression, powerful for using searching strings inside a table,\n"),a("ul",[a("li",[a("code",[s._v("^")]),s._v(": beginning of the string")]),a("li",[a("code",[s._v("$")]),s._v(": end of the string")]),a("li",[a("code",[s._v("|")]),s._v(": logical or (multiple patterns)\neg:")])])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" 'ey$"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("$’ last_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" ey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("IS NULL")]),s._v(" or "),a("code",[s._v("IS NOT NULL")]),s._v(": check condition the attribute is not null or is null records eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" phone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("ORDER BY")]),s._v(": ascending order or descending order eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" first_name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("LIMIT")]),s._v(": top number of records (eg: top 10 records)")]),a("li",[a("code",[s._v("JOIN ON")]),s._v(":  join two tables together, if we type JOIN means inner join, eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" tableName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" condition "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("tableA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AttributeId "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" tableB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("AttributeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" customers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customer_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" customers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("customer_id \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("order_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("unit_price "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" order_items oi "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" products p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id\n")])])]),a("ul",[a("li",[a("code",[s._v("JOIN")]),s._v(": join across multiple dbs")]),a("li",[s._v("outer join: "),a("code",[s._v("LEFT JOIN")]),s._v(" & "),a("code",[s._v("RIGHT JOIN")]),s._v(":\n"),a("ul",[a("li",[s._v("eg: join start from left table or start from right table")]),a("li",[s._v("left: we get all the data from left table (which is from TableName) whether the condition is true or not")]),a("li",[s._v("right: we get all the data from right table (which is from TableName) whether the condition is true or not")])])])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("quantity "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" order_items oi "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" oi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("product_id\n")])])]),a("ul",[a("li",[a("code",[s._v("USING")]),s._v(": is a shortcut for p.product_id = oi.product_id, just using this USING(product_id) [ONLY for the SAME attribute name]")]),a("li",[a("code",[s._v("UNION")]),s._v(": combine data from multiple queries [can be from same table or different table, can be same from same db or different db]!!! eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" order_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" shipper_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("INSERT INTO")]),s._v(": add data to db table, eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INSERT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTO")]),s._v(" customers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" brith_date"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" city"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VALUES")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DEFAULT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ella'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wu'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2018-06-01'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("NULL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Newington'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Sydney'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'CA'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10000'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("UPDATE")]),s._v(": modify current record, eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("UPADTE "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("columns")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" updated "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("value")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" which "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("data")]),s._v(" needs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("to")]),s._v(" be updated\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eg:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UPDATE")]),s._v(" sql_store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NewTable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SET")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" order_id "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("DELETE")]),s._v(": remove a record(s), eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" which "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(": which record\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- eg:")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DELETE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" sql_store"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("NewTable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("status")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ul",[a("li",[a("code",[s._v("CREATE TABLE")]),s._v(": used fro copy a table and its records, eg:")])]),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" NewTableNAME "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orders"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])])])])}],!1,null,null,null);t.default=r.exports}}]);